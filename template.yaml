AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Customer Management CRUD API

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    Runtime: python3.12
    Environment:
      Variables:
        CUSTOMERS_TABLE: !Ref CustomersTable
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  CustomersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: customers
      AttributeDefinitions:
        - AttributeName: customer_id
          AttributeType: S
      KeySchema:
        - AttributeName: customer_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  CreateCustomerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: create_customer.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CustomersTable
      Events:
        CreateCustomer:
          Type: Api
          Properties:
            Path: /customers
            Method: post

  GetCustomerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: get_customer.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref CustomersTable
      Events:
        GetCustomer:
          Type: Api
          Properties:
            Path: /customers/{customer_id}
            Method: get

  ListCustomersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: list_customers.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref CustomersTable
      Events:
        ListCustomers:
          Type: Api
          Properties:
            Path: /customers
            Method: get

  UpdateCustomerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: update_customer.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CustomersTable
      Events:
        UpdateCustomer:
          Type: Api
          Properties:
            Path: /customers/{customer_id}
            Method: put

  DeleteCustomerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: delete_customer.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CustomersTable
      Events:
        DeleteCustomer:
          Type: Api
          Properties:
            Path: /customers/{customer_id}
            Method: delete

  SeedDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: seed_data.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CustomersTable
      Events:
        SeedData:
          Type: Api
          Properties:
            Path: /seed
            Method: post

Outputs:
  CustomerApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  CustomersTableName:
    Description: DynamoDB table name
    Value: !Ref CustomersTable
